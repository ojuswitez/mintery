#!/usr/bin/env bash
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd $SCRIPT_DIR/../smart-contract-helper

set -u

docker-compose down

source ../.env

[ -z $ORIGINATOR_ADDRESS ] && echo 'ORIGINATOR_ADDRESS not defined in .env' && exit 1
[ -z $ORIGINATOR_PRIV_KEY ] && echo 'ORIGINATOR_PRIV_KEY not defined in .env' && exit 1
export NODE_URL=${NODE_URL:-'https://ithacanet.ecadinfra.com'}

export ADMIN_ADDRESS=$ORIGINATOR_ADDRESS
export ORIGINATOR_PRIVATE_KEY=$ORIGINATOR_PRIV_KEY


yarn install || exit 1
yarn build || exit 1

chmod +x lib/smart-contract.helper.js
yarn run smart-contract.helper compile-contract || exit 1
yarn run smart-contract.helper deploy-contract | tee ../log/deploy.log || exit 1

cd $SCRIPT_DIR/..
contract_address=`
    cat log/deploy.log \
        | grep 'Contract deployed at' \
        | awk -F':' '{print $2}' \
        | sed 's/\ *//g'`


cat << EOF > config/quepasa_config.yaml
contracts:
- name: "onchain_mintery"
  address: "$contract_address"
EOF

cat << EOF > config/peppermint_config.json
{
    "batchSize": 110,
    "confirmations": 1,
    "nftContract": "$contract_address",
    "privateKey": "$ORIGINATOR_PRIV_KEY",
    "rpcUrl": "$NODE_URL",
    "pollingDelay": 10000,
    "dbConnection": {
        "user": "pguser",
        "password": "pgpass",
        "host": "db",
        "port": 5432,
        "database": "mintery"
    }
}
EOF

echo 'contract deployed. now `docker-compose up` can be run'

./script/replace-env CONTRACT_ADDRESS "\"$contract_address\""
